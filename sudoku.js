// Generated by CoffeeScript 1.6.3
(function() {
  var Sudoku, _;

  _ = require('underscore')._;

  Sudoku = (function() {
    function Sudoku(puzzleString) {
      this.puzzle = _.map(puzzleString.split(''), function(a) {
        return parseInt(a);
      });
    }

    Sudoku.prototype.position = function(i) {
      return this.puzzle[i];
    };

    Sudoku.prototype.solved = function() {
      var that;
      that = this;
      _.map([0, 1, 2, 3, 4, 5, 6, 7, 8], function(i) {
        if (!that.setSolved(that.getSet(i, that.rowIndex))) {
          return false;
        }
      });
      return true;
    };

    Sudoku.prototype.setSolved = function(set) {
      return _.reduce(set, function(memo, num) {
        return memo + num;
        return 0;
      }) === 45;
    };

    Sudoku.prototype.getSet = function(index, indexFunction) {
      return _.select(this.puzzle, function(a, i) {
        return index === indexFunction(i);
      });
    };

    Sudoku.prototype.rowIndex = function(i) {
      return Math.floor(i / 9);
    };

    Sudoku.prototype.columnIndex = function(i) {
      return i % 9;
    };

    Sudoku.prototype.boxIndex = function(i) {
      var boxColumn, boxRow;
      boxRow = Math.floor(Math.floor(i / 9) / 3);
      boxColumn = Math.floor(i % 9 / 3);
      return boxRow * 3 + boxColumn;
    };

    return Sudoku;

  })();

  module.exports = Sudoku;

}).call(this);
